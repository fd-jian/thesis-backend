version: "3"
services:

  mosquitto:
    image: eclipse-mosquitto 
    volumes:
      - /mosquitto/data
      - /mosquitto/log
      - ./mosquitto/config:/mosquitto/config:ro
      - ./certs:/etc/mosquitto/certs:ro
    ports:
      - "8883:8883"

  mqtt-client:
    image: efrecon/mqtt-client
    command: sub -h mosquitto -p 8883 --cafile /opt/certs/ca.crt -t "#" -v 
    volumes:
      - ./certs/ca.crt:/opt/certs/ca.crt:ro
    depends_on:
      - mosquitto

  activity-detector:
    image: activity-detector
    build: ./src/activity-detector
    depends_on:
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: snapshot
      TZ: "Europe/Berlin"
    ports:
      - "8001:8000"

  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.1
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      TZ: "Europe/Berlin"
    #volumes:
      #- ./zookeeper/data:/var/lib/zookeeper/data
      #- ./zookeeper/log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      TZ: "Europe/Berlin"
    #volumes:
      #- ./kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    hostname: kafka-connect
    ports:
        - "28083:28083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_REST_PORT: 28083
      CONNECT_GROUP_ID: "engagement-detection"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-config"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      #CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: ERROR
      TZ: "Europe/Berlin"
    volumes:
        - kafka-plugins:/usr/share/java/kafka-extra
        - ./certs/ca.crt:/etc/kafka/certs/ca.crt:ro
    depends_on:
        - kafka
        - kafka-connect-mqtt-lib

  # copies contained connect jars from build to kafka-plugin volume and shuts down
  kafka-connect-mqtt-lib:
    image: kafka-connect-mqtt-lib
    build: ./src/kafka-connect-mqtt
    volumes:
      - kafka-plugins:/jars

  # creates connectors on kafka-connect via REST API calls and shuts down
  connector-creator: 
    image: connector-creator
    build: ./src/connector-creator
    environment:
      CONNECT_HOST: kafka-connect
      CONNECT_PORT: 28083
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on: 
      - kafka-connect
    volumes:
      - ./kafka/connect-mqtt/connectors:/data/connectors:ro
      - ./kafka/connect-mqtt/avro:/data/avro:ro
      #- ./activity-detector/src/main/avro/values/accelerometer.avsc:/data/schemas/mqtt-accelerometer.avsc:ro

volumes:
  kafka-plugins:
